{"version":3,"sources":["components/Button.js","components/EditField.js","components/Task.js","components/Stage.js","components/Board.js","components/App.js","serviceWorkerRegistration.js","reportWebVitals.js","reducers/index.js","reducers/board.js","reducers/stage.js","reducers/task.js","fakeAPI.js","store_test.js","store.js","index.js"],"names":["Button","props","console","log","className","tabIndex","onClick","onSave","style","backgroundColor","onCancel","isDeleting","onDelete","EditField","useState","prevText","text","setText","autoFocus","placeholder","value","onKeyDown","key","keyCode","preventDefault","onChange","ev","target","connect","state","ownProps","task","taskId","editing","toggleEditing","editTask","a","dispatch","type","payload","id","taskText","deleteTask","stageId","stage","editingTitle","toggleEditingTitle","addingTask","toggleAddingTask","addTask","uniqid","editStageTitle","newTitle","stageTitle","deleteStage","tasks","title","map","index","board","stages","App","Boolean","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","action","from","to","newStages","Array","splice","filter","remainingStages","newTasks","_taskId","source","oldIndex","newIndex","sourceTasks","removedTask","targetTasks","remainingTasks","tasksToRemove","forEach","fakeAPI","store","firstStageId","secondStageId","thirdStageId","fourthStageId","store_test","localState","localStorage","getItem","JSON","parse","err","loadLocalState","createStore","reducers","getState","length","subscribe","throttle","setItem","stringify","saveState","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9241e345.chunk.js","sourcesContent":["import React from \"react\";\nimport '../styles/components.css';\n\nconst Button = (props) => {\n    console.log(props);\n    return (\n        <div className='Edit-Buttons'>\n            <div\n                tabIndex='0'\n                className='Edit-Button'\n                onClick={props.onSave}\n                style={{backgroundColor: \"green\"}}\n            >Save\n            </div>\n            <div\n                tabIndex='0'\n                className='Edit-Button'\n                onClick={props.onCancel}\n                style={{backgroundColor: \"red\"}}\n            >Cancel\n            </div>\n            {props.isDeleting && \n                <div\n                    tabIndex='0'\n                    className='Edit-Button'\n                    onClick={props.onDelete}\n                    style={{backgroundColor: \"red\"}}\n                >Delete\n                </div>\n            }\n        </div>\n    );\n};\n\nexport default Button;\n\n","import React, {useState} from \"react\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport '../styles/components.css';\nimport Button from './Button';\n\nconst EditField = (props) => {\n    const [text, setText] = useState(props.prevText || \"\");\n\n    const onCarriage = (key) => {\n        if(key.keyCode === 13){\n            key.preventDefault();\n            props.onSave(text);\n        }\n    }\n    return(\n        <div className='Edit-Task'>\n            <div className='Task'>\n                <TextareaAutosize \n                    autoFocus\n                    placeholder={\"Enter the task\"}\n                    value={text}\n                    onKeyDown={onCarriage}\n                    onChange={(ev) => setText(ev.target.value)}\n                    className=\"Edit-Task-Textarea\"\n                />\n            </div>\n            <Button onSave={() => props.onSave(text)} onCancel={props.onCancel} onDelete={props.onDelete} isDeleting={props.isDeleting}/>\n        </div>\n    );\n};\n\nexport default EditField;\n\n\n","import React, {useState} from 'react';\nimport {connect} from 'react-redux';\nimport '../styles/components.css';\nimport EditField from './EditField';\n\nconst Task = (props) => {\n    const {task} = props;\n    const [editing, toggleEditing] = useState(false);\n\n    const editTask = async (text) => {\n        const {task, dispatch} = props;\n        toggleEditing(!editing);\n        dispatch({\n            type: 'CHANGE_TASK_TEXT',\n            payload: {taskId: task.id, taskText: text}\n        });\n    };\n\n    const deleteTask = async () => {\n        const {stageId, task, dispatch} = props;\n        toggleEditing(!editing);\n\n        dispatch({\n            type: 'DELETE_TASK',\n            payload: {stageId, taskId: task.id}\n        });\n    };\n\n    if(!editing){\n        return(\n            <div className='Task' onClick={() => toggleEditing(!editing)}> \n                {task.text}\n            </div>\n        );\n    }\n    else{\n        return(\n            <EditField onSave={editTask} onCancel={() => toggleEditing(!editing)} prevText={task.text} onDelete={deleteTask} isDeleting={true}/>\n        );\n    }\n}\n\n\nconst mapStateToProps = (state, ownProps) => ({\n  task: state.task[ownProps.taskId]\n});\n\nexport default connect(mapStateToProps)(Task);","import React, {useState} from 'react';\nimport {connect} from 'react-redux';\nimport Task from './Task';\nimport '../styles/components.css';\nimport uniqid from 'uniqid'\nimport EditField from './EditField';\n\nconst Stage = (props) => {\n    const {stage} = props;\n    const [editingTitle, toggleEditingTitle] = useState(false);\n    const [addingTask, toggleAddingTask] = useState(false);\n\n\n    const addTask = async (taskText) => {\n        const {stageId, dispatch} = props;\n        toggleAddingTask(!addingTask);\n        const taskId = uniqid();\n        dispatch({\n            type: 'ADD_TASK',\n            payload: {\n                stageId, taskId, taskText\n            }\n        })\n    };\n\n    const editStageTitle = async (newTitle) => {\n        const {stageId, dispatch} = props;\n        toggleEditingTitle(!editingTitle);\n\n        dispatch({\n            type: 'RENAME_STAGE',\n            payload: {\n                stageId, stageTitle: newTitle\n            }\n        });\n    };\n\n    const deleteStage = async () => {\n        const {stageId, stage, dispatch} = props;\n        toggleEditingTitle(!editingTitle);\n\n        dispatch({\n            type: 'DELETE_STAGE',\n            payload: {\n                stageId, tasks: stage.tasks\n            }\n        })\n    }\n    return(\n        <div className=\"Stage\">\n            {!editingTitle ? (\n                    <div className=\"Stage-Title\" onClick={() => toggleEditingTitle(!editingTitle)} >{stage.title}</div>\n                    ) : (\n                    <EditField onSave={editStageTitle} onCancel={() => toggleEditingTitle(!editingTitle)} onDelete={deleteStage} isDeleting={true} prevText={stage.title}/>\n                    )}\n            \n            {stage.tasks && stage.tasks.map((taskId, index) => {\n                return <Task stageId={stage.id} taskId={taskId} index={index} />\n            })}\n            {addingTask ? (\n                    // console.log('djkf')\n                    <EditField onSave={addTask} onCancel={() => toggleAddingTask(!addingTask)}/>\n                    ) : (\n                    <div className=\"Toggle-Add-Task\" onClick={() => toggleAddingTask(!addingTask)}>\n                        Add a Task\n                    </div>\n                    )}\n        </div>\n    );\n}\n\n\nconst mapStateToProps = (state, ownProps) => ({\n  stage: state.stage[ownProps.stageId]\n});\n\nexport default connect(mapStateToProps)(Stage);","import React from 'react';\nimport {connect} from 'react-redux';\nimport Stage from './Stage';\nimport '../styles/components.css';\n\nconst Board = (props) => {\n    const {board} = props;\n    return(\n        <div className='Board'>\n            {board.stages.map((stage, index) => {\n                return <Stage stageId={stage} index={index}/>\n            })}\n        </div>\n    );\n}\n\n\nconst mapStateToProps = (state) => ({board: state.board});\nexport default connect(mapStateToProps)(Board);","import React from 'react';\nimport '../styles/App.css';\nimport Board from './Board';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"Header\">Board</div>\n      <Board />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux'\nimport board from './board'\nimport stage from './stage'\nimport task from './task'\n\nexport default combineReducers({\n  board,\n  stage,\n  task\n})","export default function board(state = {stages: []}, action) {\n  switch (action.type) {\n    case 'ADD_STAGE': {\n        const {stageId} = action.payload;\n        return {stages: [...state.stages, stageId]};\n    }\n    case 'MOVE_STAGE': {\n        const {from, to} = action.payload;\n        const newStages = Array.from(state.stages);\n        newStages.splice(to, 0, newStages.splice(from, 1)[0]);\n        return {stages: newStages};\n    }\n    case 'DELETE_STAGE': {\n        const {stageId} = action.payload;\n        const newStages = state.stages.filter((id) => id !== stageId);\n        return {stages: newStages};\n    }\n    default:\n      return state\n  }\n}","export default function stage(state = [], action) {\n  switch (action.type) {\n    case 'ADD_STAGE': {\n        const {stageId, stageTitle} = action.payload;\n        return {...state, [stageId]: {\n            id: stageId,\n            title: stageTitle,\n            tasks: []\n        }};\n    }\n    case 'DELETE_STAGE': {\n        const {stageId} = action.payload;\n        const {[stageId]: deletedStage, ...remainingStages} = state;\n        return remainingStages;\n    }\n    case 'RENAME_STAGE': {\n        const {stageId, stageTitle: newTitle} = action.payload;\n        return {...state, [stageId]: {...state[stageId], title: newTitle}};\n    }\n    case 'ADD_TASK': {\n        const {stageId, taskId} = action.payload;\n        return {...state, [stageId]: {...state[stageId], tasks: [...state[stageId].tasks, taskId]}};\n    }\n    case 'DELETE_TASK': {\n        const{stageId, taskId} = action.payload;\n        const newTasks = state[stageId].tasks.filter((_taskId) => _taskId !== taskId);\n        return {...state, [stageId]: {...state[stageId], tasks: newTasks}};\n    }\n    case 'MOVE_TASK': {\n        const {source, target, oldIndex, newIndex} = action.payload;\n        if(source === target){\n            const newTasks = Array.from(state[source].tasks);\n            newTasks.splice(newIndex, 0, newTasks.splice(oldIndex, 1)[0]);\n            return {...state, [source]: {...state[source], tasks: newTasks}};\n        }\n        const sourceTasks = Array.from(state[source].tasks);\n        const [removedTask] = sourceTasks.splice(oldIndex, 1);\n        const targetTasks = Array.from(state[target].tasks);\n        targetTasks.splice(newIndex, 0, removedTask);\n        return {...state, [source]: {...state[source], tasks: sourceTasks}, [target]: {...state[target], tasks: targetTasks}};\n    }\n    default:\n      return state\n  }\n}","export default function task(state = [], action) {\n  switch (action.type) {\n    case 'ADD_TASK': {\n        const {taskId, taskText} = action.payload;\n        return {...state, [taskId]: {id: taskId, text: taskText}};\n    }\n    case 'CHANGE_TASK_TEXT': {\n        const {taskId, taskText} = action.payload;\n        return {...state, [taskId]: {...state[taskId], text: taskText}};\n    }\n    case 'DELETE_TASK': {\n        const {taskId} = action.payload;\n        const {[taskId]: deletedTask, ...remainingTasks} = state;\n        return remainingTasks;\n    }\n    case 'DELETE_STAGE': {\n        const {tasks: tasksToRemove} = action.payload;\n        const newTasks = {...state};\n        tasksToRemove.forEach((task)=>{\n            delete newTasks[task];\n        });\n        return newTasks;\n    }\n    default:\n      return state\n  }\n}","import uniqid from 'uniqid'\n\nconst fakeAPI = (store) => {\n    console.log('Fetching from fake API since no local data detected');\n    // console.log(store.getState());\n    //adding first dummy stage\n    const firstStageId = uniqid();\n    store.dispatch({\n        type: 'ADD_STAGE',\n        payload: {\n            stageId: firstStageId,\n            stageTitle: 'Resources'\n        }\n    });\n    store.dispatch({\n        type: 'ADD_TASK',\n        payload: {\n            stageId: firstStageId,\n            taskId: uniqid(),\n            taskText: 'Financials'\n        }\n    });\n    store.dispatch({\n        type: 'ADD_TASK',\n        payload: {\n            stageId: firstStageId,\n            taskId: uniqid(),\n            taskText: '2017 Goals'\n        }\n    });\n    store.dispatch({\n        type: 'ADD_TASK',\n        payload: {\n            stageId: firstStageId,\n            taskId: uniqid(),\n            taskText: 'Brands guide'\n        }\n    });\n    //adding second dummy stage\n    const secondStageId = uniqid();\n    store.dispatch({\n        type: 'ADD_STAGE',\n        payload: {\n            stageId: secondStageId,\n            stageTitle: 'Todo'\n        }\n    });\n    store.dispatch({\n        type: 'ADD_TASK',\n        payload: {\n            stageId: secondStageId,\n            taskId: uniqid(),\n            taskText: 'Taco drone'\n        }\n    });\n    store.dispatch({\n        type: 'ADD_TASK',\n        payload: {\n            stageId: secondStageId,\n            taskId: uniqid(),\n            taskText: 'BITCOIN'\n        }\n    });\n    store.dispatch({\n        type: 'ADD_TASK',\n        payload: {\n            stageId: secondStageId,\n            taskId: uniqid(),\n            taskText: 'Elon musk'\n        }\n    });\n    //adding third stage id\n    const thirdStageId = uniqid();\n    store.dispatch({\n        type: 'ADD_STAGE',\n        payload: {\n            stageId: thirdStageId,\n            stageTitle: 'Doing'\n        }\n    });\n    store.dispatch({\n        type: 'ADD_TASK',\n        payload: {\n            stageId: thirdStageId,\n            taskId: uniqid(),\n            taskText: 'Matic'\n        }\n    });\n    store.dispatch({\n        type: 'ADD_TASK',\n        payload: {\n            stageId: thirdStageId,\n            taskId: uniqid(),\n            taskText: 'Safe Moon'\n        }\n    });\n    //adding fourth dummy stage\n    const fourthStageId = uniqid();\n    store.dispatch({\n        type: 'ADD_STAGE',\n        payload: {\n            stageId: fourthStageId,\n            stageTitle: 'Done'\n        }\n    });\n    store.dispatch({\n        type: 'ADD_TASK',\n        payload: {\n            stageId: fourthStageId,\n            taskId: uniqid(),\n            taskText: 'Zuddl To the moon'\n        }\n    });\n};\n\nexport default fakeAPI;","// import uniqid from 'uniqid'\n\nconst store_test = (store) => {\n    // store.dispatch({\n    //     type: 'ADD_TASK',\n    //     payload: {\n    //         stageId: 'kp74cj1q',\n    //         taskId: uniqid(),\n    //         taskText: 'task2'\n    //     }\n    // })\n    // store.dispatch({\n    //     type: 'DELETE_TASK',\n    //     payload: {\n    //         stageId: 'kp71r7s1',\n    //         taskId: 'kp71rqgh'\n    //     }\n    // })\n    // store.dispatch({\n    //     type: 'MOVE_TASK',\n    //     payload: {\n    //         source: 'kp71r7s1',\n    //         target: 'kp71r7s2',\n    //         oldIndex: 0,\n    //         newIndex: 3\n    //     }\n    // })\n    // store.dispatch({\n    //     type: 'CHANGE_TASK_TEXT',\n    //     payload: {\n    //         taskId: 'kp74en6t',\n    //         taskText: 'New new Task 1'\n    //     }\n    // })\n    // store.dispatch({\n    //     type: 'DELETE_TASK',\n    //     payload: {\n    //         taskId: 'kp74f74n',\n    //         stageId: 'kp74cj1n'\n    //     }\n    // })\n    // store.dispatch({\n    //     type: 'DELETE_STAGE',\n    //     payload: {\n    //         stageId: 'kp74cj1q',\n    //         tasks: store.getState().stage['kp74cj1q'].tasks\n    //     }\n    // })\n};\n\nexport default store_test;","import { createStore } from 'redux'\nimport reducers from './reducers/index'\nimport fakeAPI from './fakeAPI'\nimport store_test from './store_test'\nimport throttle from \"lodash.throttle\";\n\nconst loadLocalState = () => {\n    try{\n        const localState = localStorage.getItem(\"state\");\n        if(localState){\n            return JSON.parse(localState);\n        }\n        return undefined;\n    }\n    catch(err){\n        console.log(\"unable to load local state\");\n    }\n};\n\nconst saveState = (state) => {\n    try{\n        localStorage.setItem(\"state\", JSON.stringify(state));\n    }\n    catch{\n        console.log(\"unable to save state\");\n    }\n};\n\nconst localState = loadLocalState();\nconst store = createStore(reducers, localState);\n// console.log(store.getState());\nif(store.getState().board.stages.length === 0){\n    fakeAPI(store);\n}\n\n//testing data\nstore_test(store);\n\n// store.subscribe = () => {\n//     saveState(store.getState());\n// };\nstore.subscribe(\n  throttle(() => {\n    saveState(store.getState());\n  }, 1000)\n);\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n  <Provider store={store}>\n    <App />\n  </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}